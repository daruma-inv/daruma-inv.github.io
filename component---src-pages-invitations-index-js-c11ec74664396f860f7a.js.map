{"version":3,"file":"component---src-pages-invitations-index-js-c11ec74664396f860f7a.js","mappings":"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","sources":["webpack://corporate/./node_modules/@mui/icons-material/DeleteForever.js","webpack://corporate/./src/components/invitations/clients-friends.js","webpack://corporate/./src/pages/invitations/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","import React, { useEffect, useState } from 'react';\nimport fetch from 'cross-fetch';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport MessageIcon from '@mui/icons-material/Message';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport SaveAsIcon from '@mui/icons-material/SaveAs';\nimport SendIcon from '@mui/icons-material/Send';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport dateFormat from '@libs/dateFormat';\nimport qr from 'qrcode';\n\nconst ClientsFriends = props => {\n  const [initialFriendName, setInitialFriendName] = useState(\n    props.clientsFriend.friendName\n  );\n  const [initialYourName, setInitialYourName] = useState(\n    props.clientsFriend.yourName\n  );\n  const [initialNote, setInitialNote] = useState(props.clientsFriend.note);\n  const [uuid, setUuid] = useState(props.clientsFriend.uuid);\n  const [friendName, setFriendName] = useState(props.clientsFriend.friendName);\n  const [yourName, setYourName] = useState(props.clientsFriend.yourName);\n  const [note, setNote] = useState(props.clientsFriend.note);\n  const [disabledUpdateButton, setDisabledUpdateButton] = useState(true);\n  const [disabledUndoButton, setDisabledUndoButton] = useState(true);\n  const [createdAt, setCreatedAt] = useState(props.clientsFriend.createdAt);\n  const [updatedAt, setUpdatedAt] = useState(props.clientsFriend.updatedAt);\n  const [createdBy, setCreatedBy] = useState(props.clientsFriend.createdBy);\n  const [updatedBy, setUpdatedBy] = useState(props.clientsFriend.updatedBy);\n\n  const [isOpenDialog, setIsOpenDialog] = useState(false);\n  const [isOpenDialogUrl, setIsOpenDialogUrl] = useState(false);\n\n  const [shareUrl, setShareUrl] = useState('');\n  const [qrImage, setQrImage] = useState('');\n\n  useEffect(() => {\n    const _shareUrl = `${process.env.URL}foryou/?uuid=${props.clientsFriend.uuid}`;\n\n    const f = async () => {\n      try {\n        const _qrImage = await qr.toDataURL(_shareUrl);\n        setQrImage(_qrImage);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    f();\n\n    setShareUrl(_shareUrl);\n\n    setInitialFriendName(props.clientsFriend.friendName);\n    setInitialYourName(props.clientsFriend.yourName);\n    setInitialNote(props.clientsFriend.note);\n    setUuid(props.clientsFriend.uuid);\n    setFriendName(props.clientsFriend.friendName);\n    setYourName(props.clientsFriend.yourName);\n    setNote(props.clientsFriend.note);\n    setDisabledUpdateButton(true);\n    setDisabledUndoButton(true);\n    setCreatedAt(props.clientsFriend.createdAt);\n    setUpdatedAt(props.clientsFriend.updatedAt);\n    setCreatedBy(props.clientsFriend.createdBy);\n    setUpdatedBy(props.clientsFriend.updatedBy);\n  }, [\n    props.clientsFriend.uuid,\n    props.clientsFriend.friendName,\n    props.clientsFriend.yourName,\n    props.clientsFriend.note,\n    props.clientsFriend.createdAt,\n    props.clientsFriend.updatedAt,\n    props.clientsFriend.createdBy,\n    props.clientsFriend.updatedBy\n  ]);\n\n  const handleChangeFriendName = ({ target: { value } }) => {\n    const isDiff =\n      value !== initialFriendName ||\n      yourName !== initialYourName ||\n      note !== initialNote;\n\n    setDisabledUpdateButton(!(value && isDiff));\n    setDisabledUndoButton(!isDiff);\n    setFriendName(value);\n  };\n\n  const handleChangeYourName = ({ target: { value } }) => {\n    const isDiff =\n      friendName !== initialFriendName ||\n      value !== initialYourName ||\n      note !== initialNote;\n\n    setDisabledUpdateButton(!(friendName && isDiff));\n    setDisabledUndoButton(!isDiff);\n    setYourName(value);\n  };\n\n  const handleChangeNote = ({ target: { value } }) => {\n    const isDiff =\n      friendName !== initialFriendName ||\n      yourName !== initialYourName ||\n      value !== initialNote;\n\n    setDisabledUpdateButton(!(friendName && isDiff));\n    setDisabledUndoButton(!isDiff);\n    setNote(value);\n  };\n\n  const handleClickUpdateButton = async () => {\n    try {\n      const res = await fetch(\n        `${process.env.API_URL}/api/partners/clients/friends/${uuid}`,\n        {\n          method: 'PUT',\n          body: JSON.stringify({\n            friendName,\n            yourName,\n            note,\n            updatedBy: 'user'\n          })\n        }\n      );\n\n      if (res.status >= 400) {\n        throw new Error('Bad response /api/partners/clients');\n      }\n\n      const {\n        friendName: _friendName,\n        yourName: _yourName,\n        note: _note,\n        createdAt: _createdAt,\n        updatedAt: _updatedAt,\n        createdBy: _createdBy,\n        updatedBy: _updatedBy\n      } = await res.json();\n\n      setInitialFriendName(_friendName);\n      setInitialYourName(_yourName);\n      setInitialNote(_note);\n\n      setFriendName(_friendName);\n      setYourName(_yourName);\n      setNote(_note);\n      setDisabledUpdateButton(true);\n      setDisabledUndoButton(true);\n      setCreatedAt(_createdAt);\n      setUpdatedAt(_updatedAt);\n      setCreatedBy(_createdBy);\n      setUpdatedBy(_updatedBy);\n    } catch (e) {\n      alert('error');\n      console.log(e);\n    }\n  };\n\n  const handleClickUndoButton = () => {\n    setFriendName(initialFriendName);\n    setYourName(initialYourName);\n    setNote(initialNote);\n    setDisabledUpdateButton(true);\n    setDisabledUndoButton(true);\n  };\n\n  const handleClickDeleteButton = () => setIsOpenDialog(true);\n\n  const handleClickDeleteOk = async () => {\n    try {\n      const res = await fetch(\n        `${process.env.API_URL}/api/partners/clients/friends/${uuid}`,\n        {\n          method: 'DELETE'\n        }\n      );\n\n      if (res.status >= 400) {\n        throw new Error('Bad response /api/partners/clients/friends');\n      }\n\n      props.reload();\n      setIsOpenDialog(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleCloseDialog = () => setIsOpenDialog(false);\n  const handleCloseDialogUrl = () => setIsOpenDialogUrl(false);\n\n  return (\n    <>\n      <TableRow\n        hover={true}\n        selected={!disabledUpdateButton || !disabledUndoButton}\n      >\n        <TableCell>\n          <Box>\n            <img\n              src={qrImage}\n              style={{\n                width: '100px',\n                height: '100px'\n              }}\n            />\n            <br />\n            <Button\n              variant='outlined'\n              size='small'\n              onClick={() => {\n                setIsOpenDialogUrl(true);\n              }}\n            >\n              URLを確認する\n            </Button>\n            <br />\n            <Button\n              variant='outlined'\n              size='small'\n              endIcon={<LaunchIcon />}\n              sx={{\n                mt: 1\n              }}\n              onClick={() => {\n                window.open(shareUrl, '_blank', 'noreferrer');\n              }}\n            >\n              ページを開く\n            </Button>\n            <br />\n            <Button\n              variant='outlined'\n              size='small'\n              startIcon={<SendIcon />}\n              sx={{\n                mt: 1\n              }}\n              onClick={() => {\n                window.open(\n                  `mailto:?subject=一緒にコンパクトウシを始めませんか？&body=${friendName}様%0D%0A%0D%0A【コンパクトウシのご案内】%0D%0Ahttps://daruma-inv.com${shareUrl}%0D%0A%0D%0A${yourName}`,\n                  '_blank',\n                  'noreferrer'\n                );\n              }}\n            >\n              メールで送る\n            </Button>\n            <br />\n            <Button\n              variant='outlined'\n              size='small'\n              color='success'\n              startIcon={<MessageIcon />}\n              sx={{\n                mt: 1\n              }}\n              onClick={() => {\n                const lineUrl = `https://social-plugins.line.me/lineit/share?url=https://daruma-inv.com${shareUrl}`;\n                window.open(lineUrl, '_blank', 'noreferrer');\n              }}\n            >\n              LINEで送る\n            </Button>\n          </Box>\n          <Dialog open={isOpenDialogUrl} onClose={handleCloseDialogUrl}>\n            <DialogTitle>コンパクトウシのご案内URL</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                https://daruma-inv.com{shareUrl}\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n        </TableCell>\n        <TableCell>\n          <TextField\n            value={friendName}\n            onChange={handleChangeFriendName}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>様</InputAdornment>\n            }}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField\n            value={yourName}\n            onChange={handleChangeYourName}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>様</InputAdornment>\n            }}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField value={note} multiline onChange={handleChangeNote} />\n        </TableCell>\n        <TableCell>\n          <Stack direction='row' spacing={1}>\n            <Tooltip title='このレコードの変更を保存する'>\n              <span>\n                <IconButton\n                  color='primary'\n                  aria-label='update'\n                  size='large'\n                  disabled={disabledUpdateButton}\n                  onClick={handleClickUpdateButton}\n                >\n                  <SaveAsIcon fontSize='inherit' />\n                </IconButton>\n              </span>\n            </Tooltip>\n            <Tooltip title='このレコードの変更を元に戻す'>\n              <span>\n                <IconButton\n                  aria-label='undo'\n                  size='large'\n                  disabled={disabledUndoButton}\n                  onClick={handleClickUndoButton}\n                >\n                  <UndoIcon fontSize='inherit' />\n                </IconButton>\n              </span>\n            </Tooltip>\n            <Tooltip title='このレコードを削除する'>\n              <IconButton\n                color='error'\n                aria-label='delete'\n                size='large'\n                onClick={handleClickDeleteButton}\n              >\n                <DeleteForeverIcon fontSize='inherit' />\n              </IconButton>\n            </Tooltip>\n          </Stack>\n        </TableCell>\n        <TableCell>\n          <Typography variant='body2'>\n            {dateFormat(createdAt)} <small>作成 ({createdBy})</small>\n          </Typography>\n          <Typography variant='body2'>\n            {dateFormat(updatedAt)} <small>更新 ({updatedBy})</small>\n          </Typography>\n        </TableCell>\n      </TableRow>\n      <Dialog\n        open={isOpenDialog}\n        onClose={handleCloseDialog}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>\n          このレコードの削除しますか？\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            ご友人、ご知人のお名前　: {initialFriendName}\n            <br />\n            お名前　: {initialYourName}\n            <br />\n            メモ　　: {initialNote}\n            <br />\n            作成日時: {dateFormat(createdAt)} ({createdBy})\n            <br />\n            更新日時: {dateFormat(updatedAt)} ({updatedBy})\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>キャンセル</Button>\n          <Button onClick={handleClickDeleteOk} autoFocus>\n            削除する\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ClientsFriends;\n","import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport fetch from 'cross-fetch';\nimport Alert from '@mui/material/Alert';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Snackbar from '@mui/material/Snackbar';\nimport Stack from '@mui/material/Stack';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TextField from '@mui/material/TextField';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport AddIcon from '@mui/icons-material/Add';\nimport ClientsFriendsTableRow from '@components/invitations/clients-friends';\nimport { useQueryParam, StringParam } from 'use-query-params';\n\nconst InvitationsIndexPage = () => {\n  const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n  const [severity, setSeverity] = useState('info');\n  const [message, setMessage] = useState('');\n\n  // 新規作成フォーム\n  const [newFriendName, setNewFriendName] = useState('');\n  const [newYourName, setNewYourName] = useState('');\n  const [newFriendNote, setNewFriendNote] = useState('');\n  const [isDisabledNewButton, setIsDisabledNewButton] = useState(true);\n  const [partnersClientUuid] = useQueryParam('uuid', StringParam);\n  const [clientsFriends, setClientsFriends] = useState();\n  const [yourName, setYourName] = useState('');\n  const [yourPartnerName, setYourPartnerName] = useState('');\n  const [isNotFound, setIsNotFound] = useState(false);\n\n  const [reload, setReload] = useState(0);\n\n  const handleCloseSnackbar = (e, reason) => {\n    if (reason === 'clickaway') return;\n    setIsOpenSnackbar(false);\n  };\n\n  const handleChangeNewClientNote = ({ target: { value } }) =>\n    setNewFriendNote(value);\n\n  useEffect(() => {\n    if (!partnersClientUuid) return;\n\n    const f = async () => {\n      try {\n        const resInfo = await fetch(\n          `${process.env.API_URL}/api/partners/clients/${partnersClientUuid}`\n        );\n\n        if (resInfo.status === 404) {\n          setIsNotFound(true);\n          throw new Error('Bad response /api/partners/clients/{uuid}');\n        }\n\n        const res = await fetch(\n          `${process.env.API_URL}/api/partners/clients/friends?partners-client-uuid=${partnersClientUuid}`\n        );\n\n        if (res.status >= 400) {\n          throw new Error('Bad response /api/partners/clients/friends{uuid}');\n        }\n\n        const infoData = await resInfo.json();\n        const data = await res.json();\n\n        setYourName(infoData.name);\n        setYourPartnerName(infoData.partner.lastNameKanji);\n        setClientsFriends(data);\n\n        setNewYourName(infoData.name);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    f();\n  }, [reload, partnersClientUuid, isNotFound]);\n\n  if (isNotFound) {\n    return (\n      <Typography align='center' mt={5}>\n        お探しのページは削除されたか見つかりません。\n        <br />\n        <a href='https://daruma-inv.com/'>https://daruma-inv.com/</a>\n      </Typography>\n    );\n  }\n\n  return !partnersClientUuid ? (\n    <></>\n  ) : (\n    <>\n      <Helmet>\n        <title>お客様ご紹介ページ | DARUMA, Inc.</title>\n      </Helmet>\n      <AppBar position='fixed' sx={{ backgroundColor: '#ef8468' }}>\n        <Container maxWidth='xl'>\n          <Toolbar disableGutters>\n            <Typography\n              variant='h6'\n              noWrap\n              fontWeight='bold'\n              sx={{ mr: 2, display: 'flex', alignItems: 'center' }}\n            >\n              {yourName} 様専用 お客様ご紹介ページ <small>(by DARUMA)</small>\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }} />\n            <Box display='flex' flexDirection='row' alignItems='center'>\n              <Box\n                display='flex'\n                flexDirection='column'\n                alignItems='center'\n                justifyContent='center'\n              >\n                <Typography fontSize={14} fontWeight='bold'>\n                  DARUMA, Inc.\n                </Typography>\n                <Typography fontSize={10}>[お客様限定]</Typography>\n              </Box>\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Container\n        maxWidth='xl'\n        sx={{\n          mt: 10\n        }}\n      >\n        <Typography>\n          <strong>{yourName}</strong>様、DARUMAの {yourPartnerName}{' '}\n          です。いつもお世話になっております。\n        </Typography>\n        <Typography>\n          この機会にぜひご友人、ご知人に DARUMA をご紹介くださいませ。\n        </Typography>\n        <Box\n          display='flex'\n          my={2}\n          pl={2}\n          py={4}\n          sx={{\n            border: '2px solid #ccc',\n            borderRadius: 2\n          }}\n        >\n          <TextField\n            label='ご友人・ご知人のお名前（ニックネーム可）'\n            variant='outlined'\n            value={newFriendName}\n            sx={{\n              width: 320\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>様</InputAdornment>\n            }}\n            onChange={e => {\n              const _newFriendName = e.target.value;\n              setNewFriendName(_newFriendName);\n              setIsDisabledNewButton(!newYourName || !_newFriendName);\n            }}\n          />\n\n          <TextField\n            label='お客様のご氏名（ニックネーム可）'\n            variant='outlined'\n            value={newYourName}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>様</InputAdornment>\n            }}\n            sx={{\n              width: 240\n            }}\n            onChange={e => {\n              const _newYourName = e.target.value;\n              setNewYourName(_newYourName);\n              setIsDisabledNewButton(!_newYourName || !newFriendName);\n            }}\n          />\n\n          <TextField\n            label='ご関係'\n            variant='outlined'\n            multiline\n            value={newFriendNote}\n            onChange={handleChangeNewClientNote}\n            sx={{\n              minWidth: 320\n            }}\n          />\n          <Button\n            variant='contained'\n            color='primary'\n            startIcon={<AddIcon />}\n            disabled={isDisabledNewButton}\n            onClick={async () => {\n              try {\n                const res = await fetch(\n                  `${process.env.API_URL}/api/partners/clients/friends`,\n                  {\n                    method: 'POST',\n                    body: JSON.stringify({\n                      partnersClientUuid,\n                      friendName: newFriendName,\n                      yourName: newYourName,\n                      note: newFriendNote,\n                      createdBy: 'user'\n                    })\n                  }\n                );\n\n                if (res.status >= 400) {\n                  throw new Error('Bad response /api/partners/clients');\n                }\n\n                setIsOpenSnackbar(true);\n                setSeverity('success');\n                setMessage(`${newFriendName} 様の情報を追加しました`);\n\n                setNewFriendName('');\n                setNewYourName('');\n                setNewFriendNote('');\n                setIsDisabledNewButton(true);\n\n                setReload(reload + 1);\n              } catch (e) {\n                alert('error');\n                console.log(e);\n              }\n            }}\n          >\n            新規作成\n          </Button>\n        </Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>URL</TableCell>\n                <TableCell>ご友人・ご知人のお名前</TableCell>\n                <TableCell>お客様の氏名（ニックネーム可）</TableCell>\n                <TableCell>ご関係</TableCell>\n                <TableCell>操作</TableCell>\n                <TableCell>タイムスタンプ</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {clientsFriends === undefined || !clientsFriends[0] ? (\n                <TableRow>\n                  <TableCell colSpan={6}>\n                    <Typography align='center'>\n                      {clientsFriends === undefined ? (\n                        <>\n                          Loading...\n                          <LinearProgress />\n                        </>\n                      ) : (\n                        'まだご紹介データがありません。『新規作成』より作成ください。'\n                      )}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                clientsFriends.map((clientsFriend, i) => (\n                  <ClientsFriendsTableRow\n                    key={i}\n                    clientsFriend={clientsFriend}\n                    reload={() => setReload(reload + 1)}\n                  />\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Stack spacing={2} sx={{ width: '100%' }}>\n          <Snackbar\n            open={isOpenSnackbar}\n            autoHideDuration={5000}\n            onClose={handleCloseSnackbar}\n          >\n            <Alert severity={severity}>{message}</Alert>\n          </Snackbar>\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default InvitationsIndexPage;\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","props","useState","clientsFriend","friendName","initialFriendName","setInitialFriendName","yourName","initialYourName","setInitialYourName","note","initialNote","setInitialNote","uuid","setUuid","setFriendName","setYourName","setNote","disabledUpdateButton","setDisabledUpdateButton","disabledUndoButton","setDisabledUndoButton","createdAt","setCreatedAt","updatedAt","setUpdatedAt","createdBy","setCreatedBy","updatedBy","setUpdatedBy","isOpenDialog","setIsOpenDialog","isOpenDialogUrl","setIsOpenDialogUrl","shareUrl","setShareUrl","qrImage","setQrImage","useEffect","_shareUrl","process","f","qr","_qrImage","console","error","handleClickUpdateButton","fetch","method","body","JSON","stringify","res","status","Error","json","_friendName","_yourName","_note","_createdAt","_updatedAt","_createdBy","_updatedBy","alert","log","handleClickDeleteOk","reload","handleCloseDialog","TableRow","hover","selected","TableCell","Box","src","style","width","height","Button","variant","size","onClick","endIcon","Launch","sx","mt","window","open","startIcon","Send","color","Message","lineUrl","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","value","onChange","target","isDiff","InputProps","endAdornment","InputAdornment","position","multiline","Stack","direction","spacing","Tooltip","title","IconButton","disabled","SaveAs","fontSize","Undo","DeleteForever","Typography","dateFormat","id","DialogActions","autoFocus","isOpenSnackbar","setIsOpenSnackbar","severity","setSeverity","message","setMessage","newFriendName","setNewFriendName","newYourName","setNewYourName","newFriendNote","setNewFriendNote","isDisabledNewButton","setIsDisabledNewButton","partnersClientUuid","useQueryParam","StringParam","clientsFriends","setClientsFriends","yourPartnerName","setYourPartnerName","isNotFound","setIsNotFound","setReload","resInfo","infoData","data","name","partner","lastNameKanji","align","href","Helmet","AppBar","backgroundColor","Container","maxWidth","Toolbar","disableGutters","noWrap","fontWeight","mr","display","alignItems","flexGrow","xs","md","flexDirection","justifyContent","my","pl","py","border","borderRadius","label","e","_newFriendName","_newYourName","minWidth","Add","TableContainer","Table","TableHead","TableBody","undefined","map","i","key","colSpan","LinearProgress","Snackbar","autoHideDuration","reason","Alert"],"sourceRoot":""}