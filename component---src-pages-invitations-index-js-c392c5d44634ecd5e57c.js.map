{"version":3,"file":"component---src-pages-invitations-index-js-c392c5d44634ecd5e57c.js","mappings":"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","sources":["webpack://corporate/./node_modules/@mui/icons-material/DeleteForever.js","webpack://corporate/./node_modules/@mui/icons-material/Update.js","webpack://corporate/./src/components/invitations/clients-friends.js","webpack://corporate/./src/pages/invitations/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79s7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58s9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z\"\n}), 'Update');\n\nexports.default = _default;","import React, { useEffect, useState } from 'react';\nimport fetch from 'cross-fetch';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Link from '@mui/material/Link';\nimport Select from '@mui/material/Select';\nimport Stack from '@mui/material/Stack';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport MessageIcon from '@mui/icons-material/Message';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport MenuItem from '@mui/material/MenuItem';\nimport SaveAsIcon from '@mui/icons-material/SaveAs';\nimport SendIcon from '@mui/icons-material/Send';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport dateFormat from '@libs/dateFormat';\nimport qr from 'qrcode';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst ClientsFriends = props => {\n  const [initialFriendName, setInitialFriendName] = useState(\n    props.clientsFriend.friendName\n  );\n  const [initialYourName, setInitialYourName] = useState(\n    props.clientsFriend.yourName\n  );\n  const [initialNote, setInitialNote] = useState(props.clientsFriend.note);\n  const [uuid, setUuid] = useState(props.clientsFriend.uuid);\n  const [friendName, setFriendName] = useState(props.clientsFriend.friendName);\n  const [yourName, setYourName] = useState(props.clientsFriend.yourName);\n  const [note, setNote] = useState(props.clientsFriend.note);\n  const [disabledUpdateButton, setDisabledUpdateButton] = useState(true);\n  const [disabledUndoButton, setDisabledUndoButton] = useState(true);\n  const [validTimestamp, setValidTimestamp] = useState(\n    props.clientsFriend.validTimestamp\n  );\n  const [createdAt, setCreatedAt] = useState(props.clientsFriend.createdAt);\n  const [updatedAt, setUpdatedAt] = useState(props.clientsFriend.updatedAt);\n  const [createdBy, setCreatedBy] = useState(props.clientsFriend.createdBy);\n  const [updatedBy, setUpdatedBy] = useState(props.clientsFriend.updatedBy);\n\n  const [isOpenDialog, setIsOpenDialog] = useState(false);\n  const [isOpenDialogUrl, setIsOpenDialogUrl] = useState(false);\n\n  const [shareUrl, setShareUrl] = useState('');\n  const [qrImage, setQrImage] = useState('');\n\n  useEffect(() => {\n    const _shareUrl = `${process.env.URL}foryou/?uuid=${props.clientsFriend.uuid}`;\n\n    const f = async () => {\n      try {\n        const _qrImage = await qr.toDataURL(_shareUrl);\n        setQrImage(_qrImage);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    f();\n\n    setShareUrl(_shareUrl);\n\n    setInitialFriendName(props.clientsFriend.friendName);\n    setInitialYourName(props.clientsFriend.yourName);\n    setInitialNote(props.clientsFriend.note);\n    setUuid(props.clientsFriend.uuid);\n    setFriendName(props.clientsFriend.friendName);\n    setYourName(props.clientsFriend.yourName);\n    setNote(props.clientsFriend.note);\n    setDisabledUpdateButton(true);\n    setDisabledUndoButton(true);\n    setValidTimestamp(props.clientsFriend.validTimestamp);\n    setCreatedAt(props.clientsFriend.createdAt);\n    setUpdatedAt(props.clientsFriend.updatedAt);\n    setCreatedBy(props.clientsFriend.createdBy);\n    setUpdatedBy(props.clientsFriend.updatedBy);\n  }, [\n    props.clientsFriend.uuid,\n    props.clientsFriend.friendName,\n    props.clientsFriend.yourName,\n    props.clientsFriend.note,\n    props.clientsFriend.validTimestamp,\n    props.clientsFriend.createdAt,\n    props.clientsFriend.updatedAt,\n    props.clientsFriend.createdBy,\n    props.clientsFriend.updatedBy\n  ]);\n\n  const handleChangeFriendName = ({ target: { value } }) => {\n    const isDiff =\n      value !== initialFriendName ||\n      yourName !== initialYourName ||\n      note !== initialNote;\n\n    setDisabledUpdateButton(!(value && isDiff));\n    setDisabledUndoButton(!isDiff);\n    setFriendName(value);\n  };\n\n  const handleChangeYourName = ({ target: { value } }) => {\n    const isDiff =\n      friendName !== initialFriendName ||\n      value !== initialYourName ||\n      note !== initialNote;\n\n    setDisabledUpdateButton(!(friendName && isDiff));\n    setDisabledUndoButton(!isDiff);\n    setYourName(value);\n  };\n\n  const handleChangeNote = ({ target: { value } }) => {\n    const isDiff =\n      friendName !== initialFriendName ||\n      yourName !== initialYourName ||\n      value !== initialNote;\n\n    setDisabledUpdateButton(!(friendName && isDiff));\n    setDisabledUndoButton(!isDiff);\n    setNote(value);\n  };\n\n  const handleClickExtendButton = async () => {\n    try {\n      const res = await fetch(\n        `${process.env.API_URL}/api/partners/clients/friends/${uuid}`,\n        {\n          method: 'PUT',\n          body: JSON.stringify({\n            validTimestamp: new Date()\n          })\n        }\n      );\n\n      if (res.status >= 400) {\n        throw new Error('Bad response /api/partners/clients');\n      }\n\n      const { validTimestamp: _validTimestamp } = await res.json();\n\n      console.log(_validTimestamp);\n\n      setValidTimestamp(_validTimestamp);\n    } catch (e) {\n      alert('error');\n      console.log(e);\n    }\n  };\n\n  const handleClickUpdateButton = async () => {\n    try {\n      const res = await fetch(\n        `${process.env.API_URL}/api/partners/clients/friends/${uuid}`,\n        {\n          method: 'PUT',\n          body: JSON.stringify({\n            friendName,\n            yourName,\n            note,\n            updatedBy: 'user'\n          })\n        }\n      );\n\n      if (res.status >= 400) {\n        throw new Error('Bad response /api/partners/clients');\n      }\n\n      const {\n        friendName: _friendName,\n        yourName: _yourName,\n        note: _note,\n        createdAt: _createdAt,\n        updatedAt: _updatedAt,\n        createdBy: _createdBy,\n        updatedBy: _updatedBy\n      } = await res.json();\n\n      setInitialFriendName(_friendName);\n      setInitialYourName(_yourName);\n      setInitialNote(_note);\n\n      setFriendName(_friendName);\n      setYourName(_yourName);\n      setNote(_note);\n      setDisabledUpdateButton(true);\n      setDisabledUndoButton(true);\n      setCreatedAt(_createdAt);\n      setUpdatedAt(_updatedAt);\n      setCreatedBy(_createdBy);\n      setUpdatedBy(_updatedBy);\n    } catch (e) {\n      alert('error');\n      console.log(e);\n    }\n  };\n\n  const handleClickUndoButton = () => {\n    setFriendName(initialFriendName);\n    setYourName(initialYourName);\n    setNote(initialNote);\n    setDisabledUpdateButton(true);\n    setDisabledUndoButton(true);\n  };\n\n  const handleClickDeleteButton = () => setIsOpenDialog(true);\n\n  const handleClickDeleteOk = async () => {\n    try {\n      const res = await fetch(\n        `${process.env.API_URL}/api/partners/clients/friends/${uuid}`,\n        {\n          method: 'DELETE'\n        }\n      );\n\n      if (res.status >= 400) {\n        throw new Error('Bad response /api/partners/clients/friends');\n      }\n\n      props.reload();\n      setIsOpenDialog(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleCloseDialog = () => setIsOpenDialog(false);\n  const handleCloseDialogUrl = () => setIsOpenDialogUrl(false);\n\n  const CopyShareUrl = () => {\n    const [open, setOpen] = useState(false);\n    const handleTooltipOpen = () => setOpen(true);\n    const handleTooltipClose = () => setOpen(false);\n\n    return (\n      <CopyToClipboard text={shareUrl} onCopy={handleTooltipOpen}>\n        <Tooltip\n          onClose={handleTooltipClose}\n          open={open}\n          title='コピーしました'\n        >\n          <Button\n            fullWidth\n            variant='outlined'\n            size='small'\n            startIcon={<ContentCopyIcon />}\n          >\n            URLをコピーする\n          </Button>\n        </Tooltip>\n      </CopyToClipboard>\n    );\n  };\n\n  return (\n    <>\n      <TableRow\n        hover={true}\n        selected={!disabledUpdateButton || !disabledUndoButton}\n      >\n        <TableCell>\n          <Box display='flex' flexDirection='column'>\n            <Box>\n              <Button\n                fullWidth\n                variant='outlined'\n                size='small'\n                startIcon={<VisibilityIcon />}\n                onClick={() => {\n                  setIsOpenDialogUrl(true);\n                }}\n              >\n                QRを表示する\n              </Button>\n              <Box mt={1}>\n                <CopyShareUrl />\n              </Box>\n              <Box mt={1}>\n                <Button\n                  fullWidth\n                  variant='outlined'\n                  size='small'\n                  startIcon={<SendIcon />}\n                  onClick={() => {\n                    window.location.href = `mailto:?subject=一緒にコンパクトウシを始めませんか？&body=${friendName}様%0D%0A%0D%0A【コンパクトウシのご案内】%0D%0A${shareUrl}%0D%0A%0D%0A${yourName}`;\n                  }}\n                >\n                  メールで送る\n                </Button>\n              </Box>\n              <Box mt={1}>\n                <Button\n                  fullWidth\n                  variant='outlined'\n                  size='small'\n                  color='success'\n                  startIcon={<MessageIcon />}\n                  onClick={() => {\n                    const lineUrl = `https://social-plugins.line.me/lineit/share?url=${shareUrl}`;\n                    window.open(lineUrl, '_blank', 'noreferrer');\n                  }}\n                >\n                  LINEで送る\n                </Button>\n              </Box>\n              <Box mt={1}>\n                <Button\n                  fullWidth\n                  size='small'\n                  color='warning'\n                  endIcon={<LaunchIcon />}\n                  onClick={() => window.open(shareUrl, '_blank', 'noreferrer')}\n                >\n                  ご紹介ページを確認する\n                </Button>\n              </Box>\n            </Box>\n            <Dialog open={isOpenDialogUrl} onClose={handleCloseDialogUrl}>\n              <DialogTitle>\n                <Typography variant='h6' textAlign='center'>\n                  {friendName}様へのコンパクトウシご案内URL\n                </Typography>\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  <img\n                    src={qrImage}\n                    style={{\n                      display: 'block',\n                      margin: '0 auto',\n                      width: '100px',\n                      height: '100px'\n                    }}\n                  />\n                  {shareUrl}\n                  <CopyShareUrl />\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n          </Box>\n        </TableCell>\n        <TableCell>\n          <TextField\n            value={friendName}\n            onChange={handleChangeFriendName}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>様</InputAdornment>\n            }}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField\n            value={yourName}\n            onChange={handleChangeYourName}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>様</InputAdornment>\n            }}\n          />\n        </TableCell>\n        <TableCell>\n          <Select\n            value={note}\n            onChange={handleChangeNote}\n            inputProps={{ readOnly: true }}\n          >\n            <MenuItem value='職場同僚'>職場同僚</MenuItem>\n            <MenuItem value='友人'>友人</MenuItem>\n            <MenuItem value='親族'>親族</MenuItem>\n            <MenuItem value='取引先'>取引先</MenuItem>\n            <MenuItem value='その他'>その他</MenuItem>\n          </Select>\n        </TableCell>\n        <TableCell>\n          <Stack direction='column' spacing={1}>\n            <Tooltip title='有効期限を延長する'>\n              <span>\n                <IconButton\n                  color='primary'\n                  aria-label='update'\n                  size='large'\n                  onClick={handleClickExtendButton}\n                >\n                  <UpdateIcon fontSize='inherit' />\n                </IconButton>\n              </span>\n            </Tooltip>\n            <Tooltip title='このレコードの変更を保存する'>\n              <span>\n                <IconButton\n                  color='primary'\n                  aria-label='update'\n                  size='large'\n                  disabled={disabledUpdateButton}\n                  onClick={handleClickUpdateButton}\n                >\n                  <SaveAsIcon fontSize='inherit' />\n                </IconButton>\n              </span>\n            </Tooltip>\n            <Tooltip title='このレコードの変更を元に戻す'>\n              <span>\n                <IconButton\n                  color='warning'\n                  aria-label='undo'\n                  size='large'\n                  disabled={disabledUndoButton}\n                  onClick={handleClickUndoButton}\n                >\n                  <UndoIcon fontSize='inherit' />\n                </IconButton>\n              </span>\n            </Tooltip>\n            <Tooltip title='このレコードを削除する'>\n              <span>\n                <IconButton\n                  color='error'\n                  aria-label='delete'\n                  size='large'\n                  onClick={handleClickDeleteButton}\n                >\n                  <DeleteForeverIcon fontSize='inherit' />\n                </IconButton>\n              </span>\n            </Tooltip>\n          </Stack>\n        </TableCell>\n        <TableCell>\n          <Typography variant='body2' color='primary'>\n            {dateFormat(\n              (() => {\n                // @TODO: refactoring\n                const expireTimestamp = new Date(validTimestamp);\n                expireTimestamp.setMonth(expireTimestamp.getMonth() + 1);\n                return expireTimestamp;\n              })()\n            )}{' '}\n            <small>(有効期限)</small>\n          </Typography>\n          <br />\n          <Typography variant='body2'>\n            {dateFormat(createdAt)} <small>作成</small>\n          </Typography>\n          <Typography variant='body2'>\n            {dateFormat(updatedAt)} <small>更新</small>\n          </Typography>\n        </TableCell>\n      </TableRow>\n      <Dialog\n        open={isOpenDialog}\n        onClose={handleCloseDialog}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>\n          このレコードの削除しますか？\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            ご友人、ご知人のお名前　: {initialFriendName}\n            <br />\n            お名前　: {initialYourName}\n            <br />\n            メモ　　: {initialNote}\n            <br />\n            作成日時: {dateFormat(createdAt)}\n            <br />\n            更新日時: {dateFormat(updatedAt)}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>キャンセル</Button>\n          <Button onClick={handleClickDeleteOk} autoFocus>\n            削除する\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ClientsFriends;\n","import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport fetch from 'cross-fetch';\nimport Alert from '@mui/material/Alert';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport FormControl from '@mui/material/FormControl';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport InputLabel from '@mui/material/InputLabel';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Snackbar from '@mui/material/Snackbar';\nimport Stack from '@mui/material/Stack';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TextField from '@mui/material/TextField';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport AddIcon from '@mui/icons-material/Add';\nimport ClientsFriendsTableRow from '@components/invitations/clients-friends';\nimport { useQueryParam, StringParam } from 'use-query-params';\n\nconst InvitationsIndexPage = () => {\n  const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n  const [severity, setSeverity] = useState('info');\n  const [message, setMessage] = useState('');\n\n  // 新規作成フォーム\n  const [newFriendName, setNewFriendName] = useState('');\n  const [newYourName, setNewYourName] = useState('');\n  const [newFriendNote, setNewFriendNote] = useState('');\n  const [isDisabledNewButton, setIsDisabledNewButton] = useState(true);\n  const [partnersClientUuid] = useQueryParam('uuid', StringParam);\n  const [clientsFriends, setClientsFriends] = useState();\n  const [yourName, setYourName] = useState('');\n  const [yourPartnerName, setYourPartnerName] = useState('');\n  const [isNotFound, setIsNotFound] = useState(false);\n\n  const [reload, setReload] = useState(0);\n\n  const handleCloseSnackbar = (e, reason) => {\n    if (reason === 'clickaway') return;\n    setIsOpenSnackbar(false);\n  };\n\n  const handleChangeNewClientNote = ({ target: { value } }) => {\n    setNewFriendNote(value);\n    setIsDisabledNewButton(!newYourName || !newFriendName || !value);\n  };\n\n  useEffect(() => {\n    if (!partnersClientUuid) return;\n\n    const f = async () => {\n      try {\n        const resInfo = await fetch(\n          `${process.env.API_URL}/api/partners/clients/${partnersClientUuid}`\n        );\n\n        if (resInfo.status === 404) {\n          setIsNotFound(true);\n          throw new Error('Bad response /api/partners/clients/{uuid}');\n        }\n\n        const res = await fetch(\n          `${process.env.API_URL}/api/partners/clients/friends?partners-client-uuid=${partnersClientUuid}`\n        );\n\n        if (res.status >= 400) {\n          throw new Error('Bad response /api/partners/clients/friends{uuid}');\n        }\n\n        const infoData = await resInfo.json();\n        const data = await res.json();\n\n        setYourName(infoData.name);\n        setYourPartnerName(infoData.partner.lastNameKanji);\n        setClientsFriends(data);\n\n        setNewYourName(infoData.name);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    f();\n  }, [reload, partnersClientUuid, isNotFound]);\n\n  if (isNotFound) {\n    return (\n      <Typography align='center' mt={5}>\n        お探しのページは削除されたか見つかりません。\n        <br />\n        <a href='https://daruma-inv.com/'>https://daruma-inv.com/</a>\n      </Typography>\n    );\n  }\n\n  return !partnersClientUuid ? (\n    <></>\n  ) : (\n    <>\n      <Helmet>\n        <title>お客様ご紹介ページ | DARUMA, Inc.</title>\n      </Helmet>\n      <AppBar position='fixed' sx={{ backgroundColor: '#ef8468' }}>\n        <Container maxWidth='xl'>\n          <Toolbar disableGutters>\n            <Typography\n              variant='h6'\n              noWrap\n              fontWeight='bold'\n              sx={{ mr: 2, display: 'flex', alignItems: 'center' }}\n            >\n              {yourName} 様専用 お客様ご紹介ページ <small>(by DARUMA)</small>\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }} />\n            <Box display='flex' flexDirection='row' alignItems='center'>\n              <Box\n                display='flex'\n                flexDirection='column'\n                alignItems='center'\n                justifyContent='center'\n              >\n                <Typography fontSize={14} fontWeight='bold'>\n                  DARUMA, Inc.\n                </Typography>\n                <Typography fontSize={10}>[お客様限定]</Typography>\n              </Box>\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Container\n        maxWidth='xl'\n        sx={{\n          mt: 10\n        }}\n      >\n        <Typography>\n          <strong>{yourName}</strong>様、DARUMAの {yourPartnerName}{' '}\n          です。いつもお世話になっております。\n        </Typography>\n        <Typography>\n          この機会にぜひご友人、ご知人に DARUMA をご紹介くださいませ。\n        </Typography>\n        <Typography variant='body2' color='error'>\n          ※URLは有効期限1カ月となり、期日を過ぎますとアクセス出来なくなりますのでご了承下さい\n        </Typography>\n        <Box\n          display='flex'\n          my={2}\n          pl={2}\n          py={4}\n          sx={{\n            border: '2px solid #ccc',\n            borderRadius: 2\n          }}\n        >\n          <TextField\n            label='ご友人・ご知人のお名前（ニックネーム可）'\n            variant='outlined'\n            value={newFriendName}\n            sx={{\n              width: 320\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>様</InputAdornment>\n            }}\n            onChange={e => {\n              const _newFriendName = e.target.value;\n              setNewFriendName(_newFriendName);\n              setIsDisabledNewButton(\n                !newYourName || !_newFriendName || !newFriendNote\n              );\n            }}\n          />\n\n          <TextField\n            label='お客様のご氏名（ニックネーム可）'\n            variant='outlined'\n            value={newYourName}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>様</InputAdornment>\n            }}\n            sx={{\n              width: 240\n            }}\n            onChange={e => {\n              const _newYourName = e.target.value;\n              setNewYourName(_newYourName);\n              setIsDisabledNewButton(\n                !_newYourName || !newFriendName || !newFriendNote\n              );\n            }}\n          />\n\n          <FormControl\n            required\n            sx={{\n              minWidth: 120\n            }}\n          >\n            <InputLabel>ご関係</InputLabel>\n            <Select\n              value={newFriendNote}\n              onChange={handleChangeNewClientNote}\n              label='ご関係'\n            >\n              <MenuItem value='職場同僚'>職場同僚</MenuItem>\n              <MenuItem value='友人'>友人</MenuItem>\n              <MenuItem value='親族'>親族</MenuItem>\n              <MenuItem value='取引先'>取引先</MenuItem>\n              <MenuItem value='その他'>その他</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Button\n            variant='contained'\n            color='primary'\n            startIcon={<AddIcon />}\n            disabled={isDisabledNewButton}\n            onClick={async () => {\n              try {\n                const res = await fetch(\n                  `${process.env.API_URL}/api/partners/clients/friends`,\n                  {\n                    method: 'POST',\n                    body: JSON.stringify({\n                      partnersClientUuid,\n                      friendName: newFriendName,\n                      yourName: newYourName,\n                      note: newFriendNote,\n                      createdBy: 'user'\n                    })\n                  }\n                );\n\n                if (res.status >= 400) {\n                  throw new Error('Bad response /api/partners/clients');\n                }\n\n                setIsOpenSnackbar(true);\n                setSeverity('success');\n                setMessage(`${newFriendName} 様の情報を追加しました`);\n\n                setNewFriendName('');\n                setNewYourName('');\n                setNewFriendNote('');\n                setIsDisabledNewButton(true);\n\n                setReload(reload + 1);\n              } catch (e) {\n                alert('error');\n                console.log(e);\n              }\n            }}\n          >\n            新規作成\n          </Button>\n        </Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>URL</TableCell>\n                <TableCell>ご友人・ご知人のお名前</TableCell>\n                <TableCell>お客様の氏名（ニックネーム可）</TableCell>\n                <TableCell>ご関係</TableCell>\n                <TableCell>操作</TableCell>\n                <TableCell>タイムスタンプ</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {clientsFriends === undefined || !clientsFriends[0] ? (\n                <TableRow>\n                  <TableCell colSpan={6}>\n                    <Typography align='center'>\n                      {clientsFriends === undefined ? (\n                        <>\n                          Loading...\n                          <LinearProgress />\n                        </>\n                      ) : (\n                        'まだご紹介データがありません。『新規作成』より作成ください。'\n                      )}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                clientsFriends.map((clientsFriend, i) => (\n                  <ClientsFriendsTableRow\n                    key={i}\n                    clientsFriend={clientsFriend}\n                    reload={() => setReload(reload + 1)}\n                  />\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Stack spacing={2} sx={{ width: '100%' }}>\n          <Snackbar\n            open={isOpenSnackbar}\n            autoHideDuration={5000}\n            onClose={handleCloseSnackbar}\n          >\n            <Alert severity={severity}>{message}</Alert>\n          </Snackbar>\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default InvitationsIndexPage;\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","props","useState","clientsFriend","friendName","initialFriendName","setInitialFriendName","yourName","initialYourName","setInitialYourName","note","initialNote","setInitialNote","uuid","setUuid","setFriendName","setYourName","setNote","disabledUpdateButton","setDisabledUpdateButton","disabledUndoButton","setDisabledUndoButton","validTimestamp","setValidTimestamp","createdAt","setCreatedAt","updatedAt","setUpdatedAt","createdBy","setCreatedBy","updatedBy","setUpdatedBy","isOpenDialog","setIsOpenDialog","isOpenDialogUrl","setIsOpenDialogUrl","shareUrl","setShareUrl","qrImage","setQrImage","useEffect","_shareUrl","process","f","qr","_qrImage","console","error","expireTimestamp","handleClickExtendButton","fetch","method","body","JSON","stringify","Date","res","status","Error","json","_validTimestamp","log","alert","handleClickUpdateButton","_friendName","_yourName","_note","_createdAt","_updatedAt","_createdBy","_updatedBy","handleClickDeleteOk","reload","handleCloseDialog","CopyShareUrl","open","setOpen","CopyToClipboard","text","onCopy","Tooltip","onClose","title","Button","fullWidth","variant","size","startIcon","ContentCopy","TableRow","hover","selected","TableCell","Box","display","flexDirection","Visibility","onClick","mt","Send","window","location","href","color","Message","lineUrl","endIcon","Launch","Dialog","DialogTitle","Typography","textAlign","DialogContent","DialogContentText","src","style","margin","width","height","TextField","value","onChange","target","isDiff","InputProps","endAdornment","InputAdornment","position","Select","inputProps","readOnly","MenuItem","Stack","direction","spacing","IconButton","Update","fontSize","disabled","SaveAs","Undo","DeleteForever","dateFormat","setMonth","getMonth","id","DialogActions","autoFocus","isOpenSnackbar","setIsOpenSnackbar","severity","setSeverity","message","setMessage","newFriendName","setNewFriendName","newYourName","setNewYourName","newFriendNote","setNewFriendNote","isDisabledNewButton","setIsDisabledNewButton","partnersClientUuid","useQueryParam","StringParam","clientsFriends","setClientsFriends","yourPartnerName","setYourPartnerName","isNotFound","setIsNotFound","setReload","resInfo","infoData","data","name","partner","lastNameKanji","align","Helmet","AppBar","sx","backgroundColor","Container","maxWidth","Toolbar","disableGutters","noWrap","fontWeight","mr","alignItems","flexGrow","xs","md","justifyContent","my","pl","py","border","borderRadius","label","e","_newFriendName","_newYourName","FormControl","required","minWidth","InputLabel","Add","TableContainer","Table","TableHead","TableBody","undefined","map","i","key","colSpan","LinearProgress","Snackbar","autoHideDuration","reason","Alert"],"sourceRoot":""}