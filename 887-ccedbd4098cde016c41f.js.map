{"version":3,"sources":["webpack://corporate/./src/components/sections/contact.js"],"names":["clientnameId","emailId","email2Id","addressId","inquiryId","useState","forms","setForms","isInvalids","setIsInvalids","disabledButton","setDisabledButton","useEffect","isInvalidEmailId","isInvalidEmail2Id","onChangeForm","key","value","id","className","action","method","name","type","required","label","example","description","invalidMessage","invalidPaste","textarea","rows","map","d","i","placeholder","htmlFor","display","alignItems","mr","variant","onChange","e","target","onPaste","preventDefault","disabled","my","href","rel","style","textDecoration"],"mappings":"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","file":"887-ccedbd4098cde016c41f.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Section from '../section';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst Contact = () => {\n  const clientnameId = 'contact__formClientname';\n  const emailId = 'contact__formEmail';\n  const email2Id = 'contact__formEmail2';\n  const addressId = 'contact__formAddress';\n  const inquiryId = 'contact__formInquiry';\n\n  const [forms, setForms] = useState({\n    [clientnameId]: '',\n    [emailId]: '',\n    [email2Id]: '',\n    [addressId]: '',\n    [inquiryId]: ''\n  });\n\n  const [isInvalids, setIsInvalids] = useState({\n    [emailId]: false,\n    [email2Id]: false\n  });\n\n  const [disabledButton, setDisabledButton] = useState(true);\n\n  const checkForm = () => {\n    let isInvalidEmailId = false;\n    let isInvalidEmail2Id = false;\n\n    if (\n      forms[emailId] &&\n      forms[email2Id] &&\n      forms[emailId] !== forms[email2Id]\n    ) {\n      isInvalidEmailId = true;\n      isInvalidEmail2Id = true;\n    }\n\n    // フォームボタンが押せなくなる条件を記述\n    setDisabledButton(\n      !forms[clientnameId] ||\n        !forms[emailId] ||\n        !forms[email2Id] ||\n        !forms[inquiryId] ||\n        isInvalidEmailId ||\n        isInvalidEmail2Id\n    );\n\n    setIsInvalids({\n      ...isInvalids,\n      [emailId]: isInvalidEmailId,\n      [email2Id]: isInvalidEmail2Id\n    });\n  };\n\n  useEffect(() => {\n    checkForm();\n  }, [forms]);\n\n  const onChangeForm = (key, value) => {\n    setForms({\n      ...forms,\n      [key]: value\n    });\n  };\n\n  return (\n    <Section id='contact'>\n      <div className='contact-background'>\n        <div className='row'>\n          <div className='col-lg-8 mx-auto'>\n            <p className='text-center mb-5'>\n              不動産の購入、売却、賃貸管理、その他お気軽にお問い合わせください。\n            </p>\n            <form\n              action='https://docs.google.com/forms/u/2/d/e/1FAIpQLSezATzl5zb4rVgOMdghXC1LhyhzXYIVaytaFpF0Qh4d_fi1_Q/formResponse'\n              method='POST'\n            >\n              {[\n                {\n                  name: 'entry.1650788426',\n                  id: clientnameId,\n                  type: 'text',\n                  required: true,\n                  label: 'お名前',\n                  example: '例：達磨 大志'\n                },\n                {\n                  id: emailId,\n                  type: 'email',\n                  required: true,\n                  label: 'メールアドレス',\n                  example: '例：taishi@daruma-inv.com'\n                },\n                {\n                  name: 'entry.1696363940',\n                  id: email2Id,\n                  type: 'email',\n                  required: true,\n                  label: 'メールアドレス',\n                  description: '（確認用）',\n                  example: '例：taishi@daruma-inv.com',\n                  invalidMessage: 'メールアドレスが一致していません。',\n                  invalidPaste: true\n                },\n                {\n                  name: 'entry.1411341641',\n                  id: addressId,\n                  type: 'text',\n                  label: 'ご住所',\n                  example: '例：東京都渋谷区千駄ヶ谷2-10-5'\n                },\n                {\n                  name: 'entry.881256958',\n                  id: inquiryId,\n                  required: true,\n                  label: 'お問い合わせ内容',\n                  example:\n                    '※ 不動産の購入・売却、などなどお気軽にお問い合わせください。',\n                  textarea: true,\n                  rows: 3\n                }\n              ].map((d, i) => {\n                const name = d.name || '';\n                const description = d.description || '';\n                const placeholder = d.placeholder || '';\n\n                return (\n                  <div className='form-group row' key={i}>\n                    <label htmlFor={d.id} className='col-md-4 col-form-label'>\n                      <Box display='flex' alignItems='center'>\n                        <Box\n                          mr={1}\n                          className={`badge rounded-0 ${\n                            d.required ? 'badge-danger' : 'badge-secondary'\n                          }`}\n                        >\n                          {d.required ? '必須' : '任意'}\n                        </Box>\n                        <Typography>{d.label}</Typography>\n                        {description && (\n                          <Typography variant='body2' className='text-muted'>\n                            {description}\n                          </Typography>\n                        )}\n                      </Box>\n                    </label>\n                    <div className='col-md-8'>\n                      {d.textarea ? (\n                        <textarea\n                          name={name}\n                          className={`form-control form-control-lg ${\n                            isInvalids[d.id] && 'is-invalid'\n                          }`}\n                          id={d.id}\n                          rows={3}\n                          required={!!d.required}\n                          placeholder={placeholder}\n                          value={forms[d.id]}\n                          onChange={e => onChangeForm(d.id, e.target.value)}\n                        ></textarea>\n                      ) : (\n                        <input\n                          name={name}\n                          className={`form-control form-control-lg ${\n                            isInvalids[d.id] && 'is-invalid'\n                          }`}\n                          id={d.id}\n                          type={d.type}\n                          required={!!d.required}\n                          placeholder={placeholder}\n                          value={forms[d.id]}\n                          onChange={e => onChangeForm(d.id, e.target.value)}\n                          onPaste={e => {\n                            if (d.invalidPaste) {\n                              e.preventDefault();\n                              return false;\n                            }\n                          }}\n                        />\n                      )}\n                      {d.example && (\n                        <Typography className='text-muted' variant='body2'>\n                          {d.example}\n                        </Typography>\n                      )}\n                      <div className='invalid-feedback'>{d.invalidMessage}</div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className='form-group row'>\n                <div className='col-sm-12'>\n                  <button\n                    type='submit'\n                    className='btn btn-primary btn-block mt-4 py-3'\n                    disabled={disabledButton}\n                  >\n                    <Typography>上記の内容で送信する</Typography>\n                  </button>\n                  <div className='text-muted text-center'>\n                    <Typography my={4}>\n                      ※上記フォームからの送信がうまくいかない場合は\n                      <a\n                        href='https://docs.google.com/forms/d/e/1FAIpQLSezATzl5zb4rVgOMdghXC1LhyhzXYIVaytaFpF0Qh4d_fi1_Q/viewform'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        className='text-muted mx-1'\n                        style={{\n                          textDecoration: 'underline'\n                        }}\n                      >\n                        こちらをクリック\n                        <i className='fas fa-external-link-alt'></i>\n                      </a>\n                      してください。\n                    </Typography>\n                    <a\n                      href='/privacy/'\n                      className='text-muted'\n                      style={{\n                        textDecoration: 'underline'\n                      }}\n                    >\n                      <Typography variant='body2'>\n                        プライバシーポリシー\n                      </Typography>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Section>\n  );\n};\n\nexport default Contact;\n"],"sourceRoot":""}